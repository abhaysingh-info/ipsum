:root {
	--dice-wh: 250px;
	--front: linear-gradient(45deg, #ff4331, #d31a50);
	--back: linear-gradient(45deg, #ff4331, #d31a50);
	--left: linear-gradient(45deg, #eff54d, #00ac61);
	--right: linear-gradient(45deg, #eff54d, #00ac61);
	--top: linear-gradient(45deg, #538ffb, #5b54fa);
	--bottom: linear-gradient(45deg, #538ffb, #5b54fa);
}

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

body {
	min-height: 100vh;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	overflow: hidden !important;
}

canvas {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}

.bg-gradient {
	background: linear-gradient(45deg, hsl(249, 100%, 4%), hsl(178, 100%, 4%));
	border-width: 0px;
}

.dice {
	position: relative;
	width: var(--dice-wh);
	height: var(--dice-wh);
	transform-style: preserve-3d;
	transform: translateZ(calc((var(--dice-wh) / 2) * -1));
	transition: all 1s;
	animation: rotate 10s linear infinite, resize 10s linear infinite;
}

/* add this class to the dice with .dice class to show this dice inside current one */
.sub-dice {
	position: absolute;
}

@keyframes resize {
	50% {
		width: calc(var(--dice-wh) / 2 * 0.75);
		height: calc(var(--dice-wh) / 2 * 0.75);
	}
}

@keyframes rotate {
	0% {
		transform: rotateY(0deg) rotateX(45deg) rotateZ(75deg);
	}
	100% {
		transform: rotateY(360deg) rotateX(45deg) rotateZ(75deg);
	}
}

.glass {
	-webkit-backdrop-filter: blur(8px);
	backdrop-filter: blur(8px);
	background-color: hsla(var(--b1), 5%);
}

.side {
	width: 100%;
	height: 100%;
	opacity: 0.4;
	border: 1px solid black;
	position: absolute;
	display: flex;
	justify-content: center;
	align-items: center;
	font-size: 2rem;
}

.dice .front {
	transform: rotateY(0deg) translateZ(calc(var(--dice-wh) / 2));
	background: var(--front);
}

.dice .back {
	transform: rotateY(180deg) translateZ(calc(var(--dice-wh) / 2));
	background: var(--back);
}

.dice .left {
	transform: rotateY(-90deg) translateZ(calc(var(--dice-wh) / 2));
	background: var(--left);
}

.dice .right {
	transform: rotateY(90deg) translateZ(calc(var(--dice-wh) / 2));
	background: var(--right);
}

.dice .top {
	transform: rotateX(90deg) translateZ(calc(var(--dice-wh) / 2));
	background: var(--top);
}

.dice .bottom {
	transform: rotateX(-90deg) translateZ(calc(var(--dice-wh) / 2));
	background: var(--bottom);
}

/* here's sphere */
.scene {
	perspective: 400vmin;
	transform-style: preserve-3d;
	position: absolute;
	width: calc(var(--dice-wh) / 2);
	height: calc(var(--dice-wh) / 2);
}

.sphere {
	transform-style: preserve-3d;
	position: absolute;
	animation: resize 10s infinite linear;
	width: 100%;
	height: 100%;
	transform-origin: 50% 50%;
	top: 0;
	left: 0;
	filter: drop-shadow(0 0 350vmin crimson);
}

.scene::before {
	content: '';
	position: absolute;
	width: 100%;
	height: 100%;
	top: 0%;
	left: 0%;
	background: radial-gradient(
			circle farthest-corner at 33% 33%,
			rgb(255, 255, 255) 0%,
			rgb(77, 77, 77) 80%
		),
		radial-gradient(
			circle farthest-corner at 45% 45%,
			rgba(255, 0, 0, 0) 50%,
			#5c5a5a 80%
		);
	border-radius: 50%;
	transform: translateZ(2vmin);
}

.text {
	position: absolute;
	bottom: 0%;
	/* transform: translate(-50%, -50%); */
	text-align: center;
	font-size: 0.5rem;
	color: white;
	max-width: 95%;
	margin: 0 auto;
	font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
}

.typewriter {
	overflow: hidden;
	white-space: nowrap;
	margin: 0 auto;
	border-right: 0.15em solid white;
	animation: typing 3s steps(40, end), blink-caret 0.75s step-end infinite;
}

@keyframes typing {
	from {
		width: 0;
	}
	to {
		width: 100%;
	}
}

@keyframes blink-caret {
	from,
	to {
		border-color: transparent;
	}
	50% {
		border-color: white;
	}
}

@media only screen and (min-width: 768px) {
	.text {
		font-size: 1rem;
	}
}
